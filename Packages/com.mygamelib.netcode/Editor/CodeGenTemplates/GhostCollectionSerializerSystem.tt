<#@ include file="CommonHeader.tt"#>
<#@ parameter name="m" type="MyGameLib.NetCode.Editor.CommonT4Info"#>

using MyGameLib.NetCode;
using Unity.Entities;

namespace <#=m.ToNamespace #>.Generated
{
    [UpdateInGroup(typeof(ClientAndServerInitializationSystemGroup))]
    internal class GhostCollectionSerializerSystem : SystemBase
    {
        protected override void OnCreate()
        {
            var ghostCollectionSystem = World.GetOrCreateSystem<GhostCollectionSystem>();

<#
    foreach (var type in m.Fields)
    {
#>
            ghostCollectionSystem.Register(<#=type.Name #>Serializer.Serializer);
<#
    }
#>
        }

        protected override void OnUpdate()
        {
            var parentGroup = World.GetExistingSystem<InitializationSystemGroup>();
            parentGroup?.RemoveSystemFromUpdateList(this);
        }
    }
}